name: "üöÄ Release Binaries and Frameworks"

on:
  push:
    tags:
      - v*
    branches:
      - release
      - main

jobs:
  ## ------------------------------------------------------------
  ## [PRE-RUN] Drafts release & Bumps version
  ## ------------------------------------------------------------
  prepare-release:
    name: ‚è∞ Prepare for Release
    runs-on: ubuntu-latest
    outputs:
      new_tag_upload_url: ${{ steps.new_tag_release.outputs.upload_url }}
      tag_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "main"
      - uses: nowsprinting/check-version-format-action@v3
        if: github.event.pull_request.merged == false
        id: version
        with:
          prefix: "v"

      - id: tag
        if: github.event.pull_request.merged == false
        uses: dawidd6/action-get-tag@v1

      - name: Create Release
        id: create_release
        if: github.event.pull_request.merged == false
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref }}
          name: ${{steps.tag.outputs.tag}}
          prerelease: ${{steps.version.outputs.prerelease != ''}}
          generateReleaseNotes: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for iOS/macOS
  ## ------------------------------------------------------------
  bind-motor-apple:
    name: üçé Bind Motor for iOS/iOS Simulator/macOS
    runs-on: macos-12
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
        with:
          ref: "main"
      - run: mkdir -p build
        working-directory: ${{ github.workspace}}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor xcFramework and Upload to GitHub Release
      # ---
      - name: Build Universal XCFramework for Motor
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          sh scripts/bind.sh -i
          gh release upload ${{ steps.tag.outputs.tag }} build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAR_COMPRESS: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for Android
  ## ------------------------------------------------------------
  bind-motor-android:
    name: ü§ñ Bind Motor for Android
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
        with:
          ref: "main"
      - run: mkdir -p build
        working-directory: ${{ github.workspace }}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor AAR Library and Upload to GitHub Release
      # ---
      - name: Build Motor AAR Library
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          sh scripts/bind.sh -a
          gh release upload ${{ steps.tag.outputs.tag }} build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          TAR_COMPRESS: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for Wasm
  ## ------------------------------------------------------------
  bind-motor-wasm:
    name: üåè Bind Motor for Web
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
        with:
          ref: "main"
      - run: mkdir -p build
        working-directory: ${{ github.workspace }}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor JS Library and Upload to GitHub Release
      # ---
      - name: Build Motor JS Library
        run: |
          sh scripts/bind.sh -w
          gh release upload ${{ steps.tag.outputs.tag }} build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAR_COMPRESS: true

  ## ------------------------------------------------------------
  ## [BLOCKCHAIN] Build and release for linux, macos
  ## ------------------------------------------------------------
  build-blockchain:
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: "main"
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Prepare Release Variables
        id: vars
        uses: ignite/cli/actions/release/vars@develop

      - name: Issue Release Assets
        continue-on-error: false
        uses: ignite/cli/actions/cli@develop
        with:
          args: chain build --release --release.prefix ${{ steps.vars.outputs.tarball_prefix }} -t linux:amd64 -t darwin:amd64 -t darwin:arm64
      - name: Run build against Release target for ubuntu
        run: |
          gh release upload ${{ steps.tag.outputs.tag }} release/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-protos:
    name: "üì¶ Publish Proto Definitions to Buf.Build"
    runs-on: ubuntu-latest
    needs:
      - prepare-release
      - bind-motor-apple
      - bind-motor-android
      - bind-motor-wasm
      - build-blockchain
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: bufbuild/buf-setup-action@v1
      - uses: bufbuild/buf-push-action@v1
        with:
          input: proto
          buf_token: ${{ secrets.BUF_TOKEN }}
